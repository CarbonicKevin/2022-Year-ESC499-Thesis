-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\spectrum_analyser\SpectrumAnalyser16384_src_FFT_Core.vhd
-- Created: 2023-04-02 00:02:10
-- 
-- Generated by MATLAB 9.8 and HDL Coder 3.16
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: SpectrumAnalyser16384_src_FFT_Core
-- Source Path: spectrum_analyser/Spectrum Analyser/Spectrum Analyser/Spectrum Analyser Core/FFT and Spectrum Processing/FFT 
-- Cor
-- Hierarchy Level: 4
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY SpectrumAnalyser16384_src_FFT_Core IS
  PORT( clk                               :   IN    std_logic;
        reset                             :   IN    std_logic;
        enb_1_16_0                        :   IN    std_logic;
        Data_In_re                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Data_In_im                        :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
        Valid_In                          :   IN    std_logic;
        Data_Out_re                       :   OUT   std_logic_vector(29 DOWNTO 0);  -- sfix30_En15
        Data_Out_im                       :   OUT   std_logic_vector(29 DOWNTO 0);  -- sfix30_En15
        Start                             :   OUT   std_logic;
        End_rsvd                          :   OUT   std_logic;
        Valid_Out                         :   OUT   std_logic
        );
END SpectrumAnalyser16384_src_FFT_Core;


ARCHITECTURE rtl OF SpectrumAnalyser16384_src_FFT_Core IS

  -- Component Declarations
  COMPONENT SpectrumAnalyser16384_src_FFT_HDL_Optimized_16384
    PORT( clk                             :   IN    std_logic;
          reset                           :   IN    std_logic;
          enb_1_16_0                      :   IN    std_logic;
          dataIn_re                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          dataIn_im                       :   IN    std_logic_vector(15 DOWNTO 0);  -- sfix16_En15
          validIn                         :   IN    std_logic;
          dataOut_re                      :   OUT   std_logic_vector(29 DOWNTO 0);  -- sfix30_En15
          dataOut_im                      :   OUT   std_logic_vector(29 DOWNTO 0);  -- sfix30_En15
          startOut                        :   OUT   std_logic;
          endOut                          :   OUT   std_logic;
          validOut                        :   OUT   std_logic
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : SpectrumAnalyser16384_src_FFT_HDL_Optimized_16384
    USE ENTITY work.SpectrumAnalyser16384_src_FFT_HDL_Optimized_16384(rtl);

  -- Signals
  SIGNAL FFT_HDL_Optimized_16384_out1_re  : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL FFT_HDL_Optimized_16384_out1_im  : std_logic_vector(29 DOWNTO 0);  -- ufix30
  SIGNAL FFT_HDL_Optimized_16384_out2     : std_logic;
  SIGNAL FFT_HDL_Optimized_16384_out3     : std_logic;
  SIGNAL FFT_HDL_Optimized_16384_out4     : std_logic;

BEGIN
  u_FFT_HDL_Optimized_16384 : SpectrumAnalyser16384_src_FFT_HDL_Optimized_16384
    PORT MAP( clk => clk,
              reset => reset,
              enb_1_16_0 => enb_1_16_0,
              dataIn_re => Data_In_re,  -- sfix16_En15
              dataIn_im => Data_In_im,  -- sfix16_En15
              validIn => Valid_In,
              dataOut_re => FFT_HDL_Optimized_16384_out1_re,  -- sfix30_En15
              dataOut_im => FFT_HDL_Optimized_16384_out1_im,  -- sfix30_En15
              startOut => FFT_HDL_Optimized_16384_out2,
              endOut => FFT_HDL_Optimized_16384_out3,
              validOut => FFT_HDL_Optimized_16384_out4
              );

  Start <= FFT_HDL_Optimized_16384_out2;

  End_rsvd <= FFT_HDL_Optimized_16384_out3;

  Valid_Out <= FFT_HDL_Optimized_16384_out4;

  Data_Out_re <= FFT_HDL_Optimized_16384_out1_re;

  Data_Out_im <= FFT_HDL_Optimized_16384_out1_im;

END rtl;

